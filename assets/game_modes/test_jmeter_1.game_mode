{
  "name_token": "@pvp_label",
  "info_token": "",
  "loading_tips_path": "libs/ui/loading_tips/tip_default.json",
  "reequip_cooldown": 10,
  "game_event_config": "test",
  "mechanics_config": {
    "pre_game_time": 90
  },
  "pre_round_config": {
    "timers": [
      {
        "name": "PreRoundTimesUp",
        "start_on": [
          {
            "event_id": "PreRoundStart"
          }
        ],
        "duration": 0
      }
    ],
    "finish_on": [
      {
        "event_id": "PreRoundTimesUp"
      }
    ]
  },
  "round_config": {
    "timers": [
      {
        "name": "RoundTimesUp",
        "start_on": [
          {
            "event_id": "RoundStart"
          }
        ],
        "duration": 2000
      }
    ],
    "finish_on": [
      {
        "event_id": "SpawnLimitReached"
      },
      {
        "event_id": "RoundTimesUp"
      },
      {
        "event_id": "RoundScoreLimitReached"
      }
    ]
  },
  "post_round_config": {
    "timers": [
      {
        "name": "PostRoundTimesUp",
        "start_on": [
          {
            "event_id": "PostRoundStart"
          }
        ],
        "duration": 0
      }
    ],
    "finish_on": [
      {
        "event_id": "PostRoundTimesUp"
      }
    ]
  },
  "hud_config": {
    "services": [
      "BasicSpawnCounterService",
      "EventLogService"
    ],
    "team_layout": "two_team"
  },
  "score": [
    {
      "event": {
        "event_id": "Kill", "actor_is_me": true
      },
      "score": 3
    },
    {
      "event": {
        "event_id": "Death", "actor_is_me": true
      },
      "score": 0
    },
    {
      "event": {
        "event_id": "Headshot", "actor_is_me": true
      },
      "score": 4
    },
    {
      "event": {
        "event_id": "Assist", "actor_is_me": true
      },
      "score": 2
    },
    {
      "event": {
        "event_id": "Resurrect", "actor_is_me": true
      },
      "score": 10
    },
    {
      "event": {
        "event_id": "Heal", "actor_is_me": true,
        "target_team": "Same"
      },
      "score": 0.1
    },
    {
      "event": {
        "event_id": "TripleKill", "actor_is_me": true
      },
      "score": 10
    },
    {
      "event": {
        "event_id": "Bloodlust", "actor_is_me": true
      },
      "score": 10
    },
    {
      "event": {
        "event_id": "FieldMedic", "actor_is_me": true
      },
      "score": 5
    },
    {
      "event": {
        "event_id": "CollateralKill", "actor_is_me": true
      },
      "score": 5
    },
    {
      "event": {
        "event_id": "SlideKill", "actor_is_me": true
      },
      "score": 5
    }
  ],
  "scoreboard": [
    {
      "scores": [
        "TotalSum"
      ],
      "title": "@totalscore"
    },
    {
      "scores": [
        "Kill",
        "Assist"
      ],
      "operations": [
        "+"
      ],
      "title": "@kills"
    },
    {
      "scores": [
        "Death"
      ],
      "title": "@deaths"
    },
    {
      "scores": [
        "Headshot"
      ],
      "title": "@headshots"
    },
    {
      "scores": [
        "Resurrect"
      ],
      "title": "@resurrects"
    },
    {
      "scores": [
        "Kill",
        "Assist",
        "Death"
      ],
      "operations": [
        "+",
        "/"
      ],
      "title": "@k/d"
    }
  ],
  "teams": [
    {
      "competitor": "Players",
      "size": 4,
      "spawn_config_params": {
        "respawn_cooldown": 1,
        "auto_respawn_time": 30,
        "spawn_limit": 1,
        "spawn_refill": 1
      },
      "feedback_config": {
        "team_spawn_used_event": "team_spawn_used"
      },
      "scoring_events": [
        {
          "event": {
            "event_id": "ObjectiveCompleted"
          }
        }
      ],
      "hero_restriction": {
        "hero_count": 2,
        "preset_filter": {
          "type": "restrict",
          "presets": [
            "a_nameless",
            "i_chosen",
            "preset_i02_proto",
            "preset_i03_proto",
            "preset_i04_proto",
            "test_preset_i01"
          ]
        }
      }
    }
  ],
  "event_log": "default",
  "skill_type": "test_jmeter"
}